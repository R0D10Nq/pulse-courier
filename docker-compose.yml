version: "3.9"
services:
  api:
    build: .
    image: pulsecourier:dev
    env_file: .env.example
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: [ "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload" ]
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import sys,urllib.request as u; u.urlopen('http://localhost:8000/api/v1/health');\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  worker:
    build: .
    image: pulsecourier:dev
    env_file: .env.example
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: [ "celery", "-A", "app.worker.celery_app:celery_app", "worker", "--loglevel=INFO", "-Q", "celery" ]

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pulse
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data

volumes:
  pgdata:
  minio:
